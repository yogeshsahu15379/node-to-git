#!/usr/bin/env bash
## Synchronize files with Mutagen into containers.
## Usage: fin sync [command]
## Commands:
##   start - force sync to start (wait for initial sync)
##   stop - terminate syncing
##   restart - stop and then start
##   status - print current status message
## If no command is given, start but don't wait if already running and waiting.

set -e

mutagen=$(which mutagen || echo "")
if [[ -z "${mutagen}" ]]; then
  echo "ERROR: Please install Mutagen using 'brew install mutagen-io/mutagen/mutagen'"
  exit 1
fi

source "$(dirname $0)/.helper"
cd ${PROJECT_ROOT}

function finish() {
  # Exit handler. Cleanup goes here.
  if [[ ! -z $syncName ]]; then
    mutagen sync terminate ${syncName}
  fi
}
trap finish EXIT

doFlush=1
status=$(mutagen project list 2>/dev/null || echo "")

if [[ ! -z "$1" ]]; then
  case "$1" in
    status) # Show sync status
      echo "+ mutagen project list"
      echo "${status}"
      ;;

    start) # Start sync
      echo_exec mutagen project start
      echo "Waiting for initial Mutagen sync..."
      echo_exec mutagen project flush
      ;;

    stop) # Start sync
      echo_exec mutagen project terminate
      ;;

    restart) # Stop/Start the sync
      echo_exec mutagen project terminate
      echo_exec mutagen project start
      echo "Waiting for initial Mutagen sync..."
      echo_exec mutagen project flush
      ;;

    once) # Perform a one-time sync of everything
      # Get optional sync path. Default to everything.
      syncPath="$2"
      syncName="${PROJECT_NAME}-once"
      # Need to ignore any symlinks that might cause sync to fail
      mutagen sync create --name=${syncName} \
        --sync-mode "two-way-resolved" \
        --no-ignore-vcs \
        --symlink-mode=ignore \
        --default-file-mode 644 \
        --default-directory-mode 755 \
        "./${syncPath}" \
        "docker://docker@${PROJECT_NAME}_cli_1/var/www/${syncPath}"
      echo "Performing one-time full Mutagen sync..."
      mutagen sync flush ${syncName}
      echo "FINISHED.  All files synced between local and CLI container."
      # Exit handler will perform the "mutagen terminate"
      ;;

    *)
      printf "$(WARN_SLUG) $1 is an unsupported argument."
      exit
      ;;

  esac

  # Done with command arguments.
  exit 0
fi

# No aguments given, so check the status and then decide what to do.
if [[ -z "${status}" ]]; then
  echo "Mutagen file sync starting..."
  echo_exec mutagen project start
elif [[ "${status}" != *"Status:"* || "${status}" == *"Status: Halted"* ]]; then
  echo "Terminating previous Mutagen sync..."
  echo_exec mutagen project terminate
  echo "Mutagen file sync starting..."
  echo_exec mutagen project start
elif [[ "${status}" == *"Watching for changes"* ]]; then
  doFlush=0
else
  echo "Mutagen file sync already running."
fi

if [[ $doFlush -eq 1 ]]; then
  sleep 1
  echo "Waiting for initial Mutagen sync..."
  echo_exec mutagen project flush
fi
echo "Mutagen file sync is ready."

echo "Use 'mutagen project list' or 'mutagen monitor' for details."
